#!/bin/bash

dir=$1
folders_num=$2
folders_names=$3
files_num=$4
files_names=$5
file_size=$6

IFS='.' read -a array_fi <<< $files_names

#IFS - internal field separator. Переменная, которая определяет разделитель полей во вводимой 
# строке. 

#read - считывает строку из стандартного ввода, разбивая её на слова, эти слова можно использовать
# в качестве вводных данных для других команд.

#синтаксис read: read [options] [var_name - имя переменной, в которую сохраняются данные]

#некоторые опции:
#-p выводит приглашение перед захватом пользовательского ввода.
#-s вкл. тихий режим, скрывая пользовательский ввод 
#-n ограничивает количество вводимых символов
#-t Тайм-аут приглашения на ввод через определённое количество секунд,
# если команда не получает ввод, записывает пустое, если ничего не успели ввести.
#-a сохраняет массив 
#-r . Предотвращает интерпретацию оболочкой обратных слэшей
# () как escape или специальных символов
# Если не указывать переменную, данные, введённые пользователем,
# будут помещены в специальную переменную среды REPLY. 



# Проверка на количество параметров
if [ "$#" -ne "6" ]; then 
echo -e "\e[91mError. The script must be run with 6 parameters.\e[0m" # -e нужно для работы цвета
exit 1
fi

#$# - это параметр, который хранит количество аргументов командной строки, переданных
# программе оболочки

# Сравнения в bash: 
#[n1 -eq n2] #Возвращает истинное значение, если n1 = n2. 
#[n1 -ge n2] #Возвращает истинное значение, если n1 >= n2.
#[n1 -gt n2] #Возвращает истинное значение, если n1 > n2.
#[n1 -le n2] #Возвращает истинное значение, если n1 <= n2.
#[n1 -lt n2] #Возвращает истинное значение, если n1 < n2.
#[n1 -ne n2] #Возвращает истинное значение, если n1 != n2.


# Проверка первого параметра $1 
if ! [ -d "$dir" ]; then
echo -e "\e[91mError. Invalid directory name: "$dir"\e[0m"
exit 1
fi 

dir=`realpath $dir`
# Проверка второго параметра $2
if [[ "$folders_num" =~ [^0-9]+ ]]; then
echo -e "\e[91mError. Parameter is not a number: "$folders_num"\e[0m"
exit 1
fi 

# Проверка третьего параметра $3

if [ ${#folders_names} -gt "7" ]; then
echo -e "\e[91mError. Line more than 7 characters: "${#folders_names}"\e[0m"
exit 1
fi

if [[ "$folders_names" =~ [^a-zA-Z]+ ]]; then
echo -e "\e[91mError. Parameter contains invalid characters: "$folders_names"\e[0m"
exit 1
fi

# Проверка параметров четвертого параметра $4

if [[ "$files_num" =~ [^0-9]+ ]]; then
echo -e "\e[91mError. Parameter is not a number: "$folders_num"\e[0m"
exit 1
fi 

# Проверка параметров пятого параметра $5
# Параметр 5 - список букв английского алфавита, используемый в имени файла и расширении (не более 7 знаков для имени, не более 3 знаков для расширения). 

if [[ ! "$files_names" =~ ^[a-zA-Z]{1,7}\.[a-zA-Z]{1,3}$ ]] ; then
echo -e "\e[91mError. Invalid parameters: "$files_names"\e[0m"
exit 1
fi

# Проверка параметров шестого параметра $6

if [[ ! "$file_size" =~ ^^[1-9][0-9]?kb$|^100kb$ ]] ; then
echo -e "\e[91mError. Invalid parameters: "$file_size"\e[0m"
exit 1
else
file_size=${file_size%?}
fi